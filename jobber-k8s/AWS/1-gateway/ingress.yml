apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jobber-gateway-ingress
  namespace: production
  labels:
    name: jobber-gateway-ingress
  annotations:
    alb.ingress.kubernetes.io/load-balancer-name: jobber-gateway-ingress
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /gateway-health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '120'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '10'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/subnets: subnet-0c033fb9684e48737,subnet-0369c6e0ce4a2847d
    alb.ingress.kubernetes.io/auth-session-cookie: session
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.type=app_cookie,stickiness.app_cookie.cookie_name=session,deregistration_delay.timeout_seconds=60
    alb.ingress.kubernetes.io/target-type: ip
    external-dns.alpha.kubernetes.io/hostname: api.jobber.hauxun.com

spec:
  ingressClassName: alb
  defaultBackend:
    service:
      name: jobber-gateway
      port:
        number: 4000
  tls:
  - hosts:
    - "*.jobber.hauxun.com"
  rules:
  - host: api.jobber.hauxun.com
    http:
      paths:
      - pathType: Prefix
        path: /api/gateway/v1
        backend:
          service:
            name: jobber-gateway
            port: 
              number: 4000
